version: v1.0
name: First pipeline example
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: "Build"
    task:
      env_vars:
        - name: APP_ENV
          value: prod
        - name: CC_TEST_REPORTER_ID
          value: 3b8cc7752799b01b3f2f42a4237543e0e781e7ac99e5b44fc0767c9bea8f697a

      jobs:
      - name: Docker build
        commands:
          - checkout
          - ls -1
          - echo $APP_ENV
          - docker-compose build
      - name: Code Climate
        commands:
          - checkout
          - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          - ls -l
          - chmod +x ./cc-test-reporter


  - name: "Unit tests"
    task:
      prologue:
        commands:
          - sem-version python 3.7
      jobs:
      - name: Pytest
        commands:
          - checkout
          - pip install -r requirements.txt
          - python -m unittest discover -p 'Test*.py'

      - name: NodeTestLambda
        commands:
          - checkout
          - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          - ls -l
          - chmod +x ./cc-test-reporter
          - ./cc-test-reporter before-build
          - npm --prefix ./awslambda/edx/ install
          - npm --prefix ./awslambda/edx/ test
          - echo $SEMAPHORE_THREAD_RESULT
          -  exitcode=$(if [ "$SEMAPHORE_THREAD_RESULT" == "passed" ]; then echo 0; else echo 1; fi)
          - ./cc-test-reporter after-build --prefix ./backend/course-hub-api

      - name: NodeTestBackend
        commands: 
          - checkout
          - npm --prefix ./backend/course-hub-api/ install
          - npm --prefix ./backend/course-hub-api/ test

      - name: NodeTestFrontend
        commands:
          - checkout
          - npm --prefix ./frontend/course-hub-ui/ install
          - npm --prefix ./frontend/course-hub-ui/ test
      - name: Coverage Report
        commands:
          - checkout
          - exitcode=$(if [ "$SEMAPHORE_THREAD_RESULT" == "passed" ]; then echo 0; else echo 1; fi)
          - ./cc-test-reporter after-build

  - name: "Integration tests"
    task:
      jobs:
      - name: Cucumber
        commands:
          - checkout
          - echo "make cucumber"
  - name: "Push Image"
    task:
      jobs:
      - name: Push
        commands:
          - checkout
          - echo "make docker.push"